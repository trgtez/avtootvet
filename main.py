import telebot
from flask import Flask, request
import threading
import time
import os  # –î–ª—è —á—Ç–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
import logging  # –î–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)  # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî INFO

TOKEN = '8212647592:AAGjpHDjphZSLVZRVwhe1duYvgQ13mUdjtI'  # –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–π —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –û—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(func=lambda msg: True, content_types=['text'])
def handle_text(message):
    user_id = message.from_user.id

    logging.info(f"Received message: {message.text} from {user_id}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç, –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º —Å–Ω–æ–≤–∞
    if user_states.get(user_id) in ['waiting_for_media', 'done', 'finished']:
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ 'waiting_for_media', —á—Ç–æ–±—ã –æ–Ω –Ω–µ –ø–æ–ª—É—á–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ
    user_states[user_id] = 'waiting_for_media'

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç! –Ø –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫. –í–æ—Ç —á—Ç–æ —è –º–æ–≥—É —Ç–µ–±–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:\n\n'
                           '1Ô∏è‚É£ –õ–∞–π–∫–Ω–∏ –∏ –Ω–∞–ø–∏—à–∏ "—Å–ø–∞—Å–∏–±–æ" –ø–æ–¥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º —Å –º–æ–∏–º –Ω–∏–∫–æ–º –≤ —Ç–∏–∫—Ç–æ–∫–µ!\n'
                           '2Ô∏è‚É£ –ù–∞–ø–∏—à–∏ –ø–æ–¥ 10 –ª—é–±—ã—Ö –≤–∏–¥–µ–æ —Ç–µ–∫—Å—Ç:\n\n'
                           '"—Ö–∑, –≤—Å–µ–º –ø–æ –ø–æ–¥–∞—Ä–∫—É –ø–æ–¥–∞—Ä—é @locer2 üòâ"\n\n'
                           '–ö–æ–≥–¥–∞ —Å–¥–µ–ª–∞–µ—à—å, —Å–∫–∏–Ω—å —Å–∫—Ä–∏–Ω—ã, –∏ —è –ø—Ä–∏—à–ª—é –ø–æ–¥–∞—Ä–æ–∫!')

    # –ó–∞–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è —á–µ—Ä–µ–∑ 7 —Å–µ–∫—É–Ω–¥
    threading.Thread(target=send_task, args=(message,)).start()

# –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ —á–µ—Ä–µ–∑ 7 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞
def send_task(message):
    time.sleep(7)  # –ó–∞–¥–µ—Ä–∂–∫–∞ 7 —Å–µ–∫—É–Ω–¥
    bot.send_message(
        message.chat.id,
        '<strong>1Ô∏è‚É£ –õ–∞–π–∫–Ω–∏ –∏ –Ω–∞–ø–∏—à–∏ "—Å–ø–∞—Å–∏–±–æ" –ø–æ–¥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º —Å –º–æ–∏–º –Ω–∏–∫–æ–º –≤ —Ç–∏–∫—Ç–æ–∫–µ!</strong>\n'
        '(–¢–∞–º –≥–¥–µ —Ç—ã —É–≤–∏–¥–µ–ª –∫–æ–º–µ–Ω—Ç —Å–æ –º–Ω–æ–π)\n\n'
        '<strong>2Ô∏è‚É£ –ù–∞–ø–∏—à–∏ –ø–æ–¥ 10 –ª—é–±—ã—Ö –≤–∏–¥–µ–æ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Çüëá</strong>\n\n'
        '<code>—Ö–∑, –≤—Å–µ–º –ø–æ –ø–æ–¥–∞—Ä–∫—É –ø–æ–¥–∞—Ä—é @locer2 üòâ</code>\n\n'
        '–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –õ–ê–ô–ö–ê–¢–¨ –°–í–û–ò –ö–û–ú–ú–ï–ù–¢–´‚ùóÔ∏è\n\n'
        '–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ –Ω–µ –∑–∞–±—É–¥—å —Å–∫–∏–Ω—É—Ç—å —Å–∫—Ä–∏–Ω—ã!!!\n\n'
        'Ô∏è‚ùóÔ∏è–ë–ï–ó –°–ö–†–ò–ù–û–í –ù–ï –°–ö–ò–ù–£ –ü–û–î–ê–†–û–ö‚ùóÔ∏è\n\n'
        '–ë–æ–ª—å—à–µ –∑–∞–¥–∞–Ω–∏–π –Ω–µ –±—É–¥–µ—Ç, –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ä–∞–∑—É —Å–∫–∏–Ω—É –ø–æ–¥–∞—Ä–æ–∫',
        parse_mode='html'
    )

# –û—Ç–≤–µ—Ç –Ω–∞ –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ)
@bot.message_handler(content_types=['photo', 'video'])
def handle_media(message):
    user_id = message.from_user.id

    logging.info(f"Received media from {user_id}")

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç, –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º —Å–Ω–æ–≤–∞
    if user_states.get(user_id) in ['waiting_for_media', 'done', 'finished']:
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ 'done', —á—Ç–æ–±—ã –æ–Ω –Ω–µ –ø–æ–ª—É—á–∞–ª –æ—Ç–≤–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ
    user_states[user_id] = 'done'

    # –û—Ç–≤–µ—Ç –Ω–∞ –º–µ–¥–∏–∞
    bot.send_message(
        message.chat.id,
        '–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–∫—Ä–∏–Ω—ã! ‚ù§Ô∏è\n\n'
        '–¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è—é —Ç–≤–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ.'
    )

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç
    threading.Thread(target=delayed_gift_message, args=(message.chat.id, user_id)).start()

# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥–∞—Ä–∫–∞ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç
def delayed_gift_message(chat_id, user_id):
    time.sleep(900)  # 15 –º–∏–Ω—É—Ç = 900 —Å–µ–∫—É–Ω–¥
    bot.send_message(chat_id, '–ü–æ–¥–∞—Ä–æ–∫ –æ—Ç –º–µ–Ω—è –≤ —ç—Ç–æ–º –±–æ—Ç–µ.')
    user_states[user_id] = 'finished'

@app.route(f'/{TOKEN}', methods=['POST'])
def webhook():
    try:
        json_str = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_str)
        logging.info(f"Received update: {update}")  # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.process_new_updates([update])
        logging.info(f"Processed update successfully.")  # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
        return 'ok', 200
    except Exception as e:
        logging.error(f"Error while processing update: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        return 'Error', 500

@app.route('/')
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!", 200

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å –Ω—É–∂–Ω—ã–º —Ö–æ—Å—Ç–æ–º –∏ –ø–æ—Ä—Ç–æ–º –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 5000)))
